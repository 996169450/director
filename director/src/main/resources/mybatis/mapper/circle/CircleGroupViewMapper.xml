<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hnu.mapper.circle.CircleGroupViewMapper">
  <resultMap id="BaseResultMap" type="com.hnu.entity.circle.CircleGroupView">
    <result column="tjid" jdbcType="INTEGER" property="tjid" />
    <result column="circlename" jdbcType="VARCHAR" property="circlename" />
    <result column="groupid" jdbcType="VARCHAR" property="groupid" />
    <result column="groupname" jdbcType="VARCHAR" property="groupname" />
    <result column="membertjid" jdbcType="INTEGER" property="membertjid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tjid, circlename, groupid, groupname, membertjid
  </sql>
  <select id="selectByExample" parameterType="com.hnu.entity.circle.CircleGroupViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from circle_group_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hnu.entity.circle.CircleGroupViewExample">
    delete from circle_group_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hnu.entity.circle.CircleGroupView">
    insert into circle_group_view (tjid, circlename, groupid, 
      groupname, membertjid)
    values (#{tjid,jdbcType=INTEGER}, #{circlename,jdbcType=VARCHAR}, #{groupid,jdbcType=VARCHAR}, 
      #{groupname,jdbcType=VARCHAR}, #{membertjid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hnu.entity.circle.CircleGroupView">
    insert into circle_group_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tjid != null">
        tjid,
      </if>
      <if test="circlename != null">
        circlename,
      </if>
      <if test="groupid != null">
        groupid,
      </if>
      <if test="groupname != null">
        groupname,
      </if>
      <if test="membertjid != null">
        membertjid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tjid != null">
        #{tjid,jdbcType=INTEGER},
      </if>
      <if test="circlename != null">
        #{circlename,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null">
        #{groupid,jdbcType=VARCHAR},
      </if>
      <if test="groupname != null">
        #{groupname,jdbcType=VARCHAR},
      </if>
      <if test="membertjid != null">
        #{membertjid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hnu.entity.circle.CircleGroupViewExample" resultType="java.lang.Long">
    select count(*) from circle_group_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update circle_group_view
    <set>
      <if test="record.tjid != null">
        tjid = #{record.tjid,jdbcType=INTEGER},
      </if>
      <if test="record.circlename != null">
        circlename = #{record.circlename,jdbcType=VARCHAR},
      </if>
      <if test="record.groupid != null">
        groupid = #{record.groupid,jdbcType=VARCHAR},
      </if>
      <if test="record.groupname != null">
        groupname = #{record.groupname,jdbcType=VARCHAR},
      </if>
      <if test="record.membertjid != null">
        membertjid = #{record.membertjid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update circle_group_view
    set tjid = #{record.tjid,jdbcType=INTEGER},
      circlename = #{record.circlename,jdbcType=VARCHAR},
      groupid = #{record.groupid,jdbcType=VARCHAR},
      groupname = #{record.groupname,jdbcType=VARCHAR},
      membertjid = #{record.membertjid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>